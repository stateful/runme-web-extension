name: 'Release'

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: "Release Type"
        required: true
        type: choice
        default: "patch"
        options:
          - patch
          - minor
          - major
      preRelease:
        description: If latest release was a pre-release (e.g. X.X.X-alpha.0) and you want to push another one, pick "yes"
        required: true
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Git
        run: |
          git config --global user.name "stateful-wombot"
          git config --global user.email "christian+github-bot@stateful.com"
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Test
        run: npm run bundle
        env:
          NODE_ENV: production
      - name: Create Changelog
        run: |
          git log $(git describe --tags --abbrev=0)..HEAD --oneline &> ${{ github.workspace }}-CHANGELOG.txt
          cat ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        run: npx release-it ${{github.event.inputs.releaseType}} --no-npm --no-github.release --ci --npm.skipChecks --no-git.requireCleanWorkingDir
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preRelease == 'no' }}
      - name: Pre-Release
        run: npx release-it ${{github.event.inputs.releaseType}} --no-npm --no-github.release --ci --npm.skipChecks --no-git.requireCleanWorkingDir --preRelease=alpha --github.preRelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preRelease == 'yes' }}
      - name: Prepare Release
        run: echo "RUNME_VERSION=$(cat package.json | jq .version)" >> $GITHUB_ENV
      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./*.crx,./*.zip"
          bodyFile: ${{ github.workspace }}-CHANGELOG.txt
          tag: ${{ env.RUNME_VERSION }}
          prerelease: ${{ github.event.inputs.preRelease == 'yes' }}
      - uses: actions/upload-artifact@v3
        with:
          name: extension-files
          path: |
            ./*.crx
            ./*.zip
